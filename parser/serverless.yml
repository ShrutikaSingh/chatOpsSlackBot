# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: nbcuniversal
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: parser
# "service" is the name of this project. This will also be added to your AWS resource names.
service: parser

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  stage: dev
  environment:
    # SLACK_WEBHOOK_URL: os.environ["SLACK_WEBHOOK_URL"]
    SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: 
        - arn:aws:lambda:us-east-1:975049931675:function:parser-dev-secondLambda
    - Effect: Allow
      Action:
        - logs:CreateLogStream
        - logs:CreateLogGroup
        - logs:TagResource
        - logs:PutLogEvents
      Resource: 
        - arn:aws:logs:us-east-1:975049931675:log-group:/aws/lambda/parser-dev*:* 
        - arn:aws:logs:us-east-1:975049931675:log-group:/aws/lambda/parser-dev*:*:* 
        - arn:aws:logs:us-east-1:975049931675:log-group:/aws/lambda/parser-dev-firstLambda:*

functions:

  hello:
    handler: parser.hello
    events:
      - http:
          path: /hello_parser
          method : get
    
  
  firstLambda:
    handler: parser.first_lambda
    events:
      - http:
          path: /first_parser
          method: post
          # cors: true

  secondLambda:
    handler: parser.second_lambda
    events:
      - http:
          path: /second_parser
          method: post

 